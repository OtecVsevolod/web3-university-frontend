const glossary = {
    "Web3": "Концепция «нового интернета», основанного на блокчейне: данные распределены, а управление переходит от централизованных организаций к пользователям. Web3 объединяет технологии криптовалют, смарт-контрактов и децентрализации для создания открытых и безопасных сервисов.",
    "Blockchain": "Технология распределённого реестра (цепочки блоков), в которой хранятся записи всех транзакций. Каждый новый блок связан с предыдущим с помощью криптографии, что предотвращает подделку данных. Блокчейн поддерживается множеством узлов сети, обеспечивая децентрализацию и неизменяемость информации.",
    "Smart Contract": "Программа, хранящаяся в блокчейне и автоматически выполняющая заложенные в ней условия. Смарт-контракт устраняет необходимость в посредниках: как только оговоренные условия наступают, код самостоятельно осуществляет соответствующие транзакции или действия в сети.",
    "dApp": "Децентрализованное приложение — пользовательское приложение, которое хранит и обрабатывает данные на блокчейне, а не на централизованном сервере. dApp сочетает обычный интерфейс (фронтенд) со смарт-контрактами на блокчейне, позволяя пользователям взаимодействовать друг с другом напрямую, без посредников.",
    "DAO": "Децентрализованная автономная организация — сообщество, управляемое с помощью смарт-контрактов и токенов, без центрального руководства. Правила и структура DAO запрограммированы прозрачно в блокчейне, а участники (держатели токенов) голосуют за решения и тем самым collectively управляют организацией.",
    "NFT": "Невзаимозаменяемый токен — уникальный цифровой актив на блокчейне, подтверждающий право собственности на объект (например, изображение, видео или игровой предмет). Каждый NFT обладает индивидуальной ценностью и не равнозначен другому токену, что отличает его от взаимозаменяемых токенов вроде криптовалют.",
    "IPFS": "Межпланетная файловая система — децентрализованный протокол хранения и передачи данных в peer-to-peer сети. IPFS распределяет файлы между многими узлами и идентифицирует их по криптографическим хэшам, обеспечивая постоянное хранение и доступность информации без единого централизованного сервера.",
    "EVM": "Ethereum Virtual Machine — виртуальная машина Ethereum (Эфириум), среда выполнения смарт-контрактов. EVM задаёт единый набор правил для исполнения контрактного кода на всех узлах сети Ethereum и совместимых блокчейнов, обеспечивая одинаковое поведение смарт-контракта независимо от того, на каком узле он выполняется.",
    "Gas": "Газ — условная единица вычислительных ресурсов в Ethereum, необходимая для выполнения операций или транзакций. Каждая операция «стоит» определённое количество газа; отправляя транзакцию, пользователь платит комиссию, равную объёму израсходованного газа × цене за единицу газа. Механизм газа предотвращает чрезмерное потребление ресурсов сетью и вознаграждает майнеров/валидаторов за обработку транзакций.",
    "Private Key": "Приватный ключ — секретный криптографический ключ, удостоверяющий владение блокчейн-аккаунтом и позволяющий подписывать транзакции. Владение приватным ключом даёт полный контроль над средствами на соответствующем адресе, поэтому ключ должен храниться в тайне: если он станет известен посторонним, ваши криптоактивы окажутся под угрозой.",
    "Public Key": "Публичный ключ — открытый криптографический ключ, математически связанный с приватным ключом. Публичный ключ (или производный от него адрес) можно сообщать другим — по нему вам отправляют средства или шифруют сообщения. Зная только публичный ключ, получить доступ к средствам невозможно: для подписания транзакций требуется соответствующий приватный ключ.",
    "Wallet": "Кошелёк — приложение или устройство для управления криптовалютными адресами и ключами. Кошелёк хранит приватные ключи пользователя, позволяя просматривать баланс связанных адресов, создавать новые адреса и безопасно подписывать транзакции для отправки средств или взаимодействия со смарт-контрактами.",
    "Node": "Узел — компьютер (или устройство), подключённый к блокчейн-сети, который хранит копию распределённого реестра и участвует в проверке транзакций. Узлы синхронизируются друг с другом, обеспечивая целостность сети, и могут выполнять разные роли: например, некоторые узлы (майнеры/валидаторы) формируют новые блоки, добавляя их в блокчейн.",
    "Mainnet": "Основная сеть блокчейна, в которой совершаются реальные транзакции с настоящей ценностью. Например, Ethereum Mainnet — это основная сеть Ethereum, где транзакции оплачиваются эфиром (ETH) и записи в реестре неизменны. Развертывание смарт-контракта на mainnet означает работу с реальными криптоактивами и рисками.",
    "Testnet": "Тестовая сеть блокчейна, используемая для разработки и испытаний, где криптовалюта не имеет реальной ценности. На тестнетах (например, Goerli или Sepolia в экосистеме Ethereum) разработчики могут проверять работу смарт-контрактов и dApp без риска потери настоящих средств, обнаруживая и исправляя ошибки перед деплоем на mainnet.",
    "Provider": "Провайдер (узел-провайдер) — сервис или узел, который предоставляет приложению доступ к блокчейн-сети. С помощью провайдера dApp может читать данные блокчейна и отправлять транзакции. Примеры провайдеров: инфраструктурные сервисы вроде Alchemy или Infura, а также локально запущенные узлы, с которыми приложение связывается через API/библиотеки.",
    "Signer": "Signer (подписант) — объект или компонент, который обладает приватным ключом и может цифрово подписывать транзакции от имени определённого аккаунта. Проще говоря, Signer отвечает за авторизацию операций в блокчейне. Например, кошелёк MetaMask выполняет роль Signer: он хранит приватный ключ пользователя и подписывает транзакции, когда пользователь их отправляет.",
    "MetaMask": "MetaMask — популярный криптокошелёк в форме расширения для браузера. Позволяет пользователям создавать Ethereum-аккаунты, хранить и отправлять криптовалюту и токены, а также подключаться к dApp напрямую из браузера. MetaMask берёт на себя управление приватными ключами и подпись транзакций, упрощая взаимодействие с блокчейном для обычных пользователей.",
    "Solidity": "Solidity — основной язык программирования смарт-контрактов в Ethereum. Он статически типизирован и по синтаксису напоминает сочетание JavaScript и C++. Код на Solidity компилируется в байткод, который выполняется внутри EVM на блокчейне. Благодаря Solidity разработчики могут задавать логику работы токенов, dApp и других протоколов непосредственно в блокчейне.",
    "Hardhat": "Hardhat — современный фреймворк для разработки, тестирования и деплоя смарт-контрактов Ethereum. Предоставляет локальную блокчейн-среду для автоматизированных тестов, удобные инструменты компиляции и развёртывания контрактов, поддержку плагинов (например, интеграция с Ethers.js) и отладку — всё, что упрощает жизнь разработчику Web3-приложений.",
    "Truffle": "Truffle — один из первых и наиболее распространённых фреймворков для создания децентрализованных приложений на Ethereum. Включает инструменты для компиляции смарт-контрактов, их миграции (развёртывания) в сеть, написания тестов и взаимодействия с блокчейном через консоль. Truffle часто используется вместе с Ganache (локальной блокчейн-средой) для полного цикла разработки и тестирования.",
    "Alchemy": "Alchemy — платформа для разработчиков Web3, предлагающая узлы в качестве сервиса (node-as-a-service) и связанные инструменты. Alchemy позволяет приложениям подключаться к Ethereum и другим сетям через свои API, избавляя от необходимости поддерживать собственный узел. Помимо доступа к блокчейну, Alchemy предоставляет панели мониторинга, аналитику и другие функции, упрощающие создание и масштабирование dApp.",
    "Etherscan": "Etherscan — популярный блокчейн-эксплорер (просмотрщик блокчейна) для сети Ethereum. Позволяет любому желающему искать и просматривать данные о блоках, транзакциях, адресах и смарт-контрактах. С помощью Etherscan можно, например, проверять статус транзакции, изучать исходный код верифицированных смарт-контрактов и отслеживать движение токенов по адресам.",
    "Pinata": "Pinata — сервис для удобной загрузки и закрепления (pinning) файлов в сети IPFS. Позволяет разработчикам хранить файлы (например, изображения и метаданные для NFT) в децентрализованном хранилище, гарантируя их постоянную доступность. Pinata берёт на себя роль узла IPFS, который удерживает содержимое в сети, так что оно всегда доступно по закреплённому хэшу.",
    "Ethers.js": "Ethers.js — популярная JavaScript-библиотека для взаимодействия с Ethereum. Предоставляет набор высокоуровневых методов для работы с блокчейном: отправка транзакций, вызов смарт-контрактов, получение баланса, управление аккаунтами и т.д. Ethers.js упрощает разработку фронтенда Web3, позволяя подключаться к провайдеру (например, Infura или локальному узлу) и работать с кошельками прямо из веб-приложения.",
    "Web3.js": "Web3.js — официальная JavaScript-библиотека от Ethereum Foundation для работы с Ethereum-блокчейном. С помощью Web3.js веб-приложение может подключаться к Ethereum-узлу, вызывать методы смарт-контрактов и отправлять транзакции. Эта библиотека долгое время была стандартом для dApp, однако в новых проектах её нередко заменяют на Ethers.js из-за более удобного интерфейса и функциональности."
  };
  export default glossary;
  