import React, { useState } from "react";
import LessonWrapper from "../../../components/LessonWrapper";
import { Link } from "react-router-dom";
import "../../../LessonStyle.css";

const questions = [
  {
    question: "–ß—Ç–æ —Ç–∞–∫–æ–µ Ethereum?",
    options: [
      "–ü—Ä–æ—Å—Ç–æ –µ—â—ë –æ–¥–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞",
      "–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –±–∞–Ω–∫",
      "–ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤",
      "–ë–∏—Ä–∂–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"
    ],
    correctIndex: 2,
  },
  {
    question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç?",
    options: [
      "–•—Ä–∞–Ω–∏—Ç –ø–∞—Ä–æ–ª–∏",
      "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —É—Å–ª–æ–≤–∏—è –±–µ–∑ —É—á–∞—Å—Ç–∏—è —á–µ–ª–æ–≤–µ–∫–∞",
      "–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å Bitcoin",
      "–°–æ–∑–¥–∞—ë—Ç —Ñ–µ–π–∫–æ–≤—ã–µ —Ç–æ–∫–µ–Ω—ã"
    ],
    correctIndex: 1,
  },
  {
    question: "–ß—Ç–æ —Ç–∞–∫–æ–µ ERC-20?",
    options: [
      "–ù–æ–≤—ã–π —Ç–∏–ø –±–ª–æ–∫—á–µ–π–Ω–∞",
      "–°—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Å–µ—Ç–∏ Ethereum",
      "–í–∏–¥ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã",
      "–ë–∏—Ä–∂–∞"
    ],
    correctIndex: 1,
  },
  {
    question: "–ó–∞—á–µ–º –Ω—É–∂–µ–Ω gas –≤ Ethereum?",
    options: [
      "–ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç",
      "–î–ª—è —É–∫—Ä–∞—à–µ–Ω–∏—è —Å–∞–π—Ç–∞",
      "–î–ª—è –æ–ø–ª–∞—Ç—ã –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Å–µ—Ç–∏ Ethereum",
      "–≠—Ç–æ —Ç–æ–∫–µ–Ω"
    ],
    correctIndex: 2,
  },
  {
    question: "–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –∞–¥—Ä–µ—Å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Ethereum?",
    options: [
      "–ù–∏—á–µ–º",
      "–ê–¥—Ä–µ—Å ‚Äî —ç—Ç–æ –ø—É–±–ª–∏—á–Ω–∞—è —á–∞—Å—Ç—å, –∞–∫–∫–∞—É–Ω—Ç ‚Äî —Å—É—â–Ω–æ—Å—Ç—å —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∫–ª—é—á–æ–º",
      "–ê–¥—Ä–µ—Å ‚Äî —ç—Ç–æ –∏–º—è, –∞–∫–∫–∞—É–Ω—Ç ‚Äî –ø–∞—Ä–æ–ª—å",
      "–ê–∫–∫–∞—É–Ω—Ç ‚Äî —ç—Ç–æ –ø–æ—á—Ç–∞"
    ],
    correctIndex: 1,
  },
  {
    question: "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞?",
    options: [
      "–ú–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ –ø–æ—á—Ç—É",
      "–î–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ MetaMask",
      "–î–æ—Å—Ç—É–ø –∫ —Å—Ä–µ–¥—Å—Ç–≤–∞–º –±—É–¥–µ—Ç —É—Ç–µ—Ä—è–Ω –Ω–∞–≤—Å–µ–≥–¥–∞",
      "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ Binance –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç"
    ],
    correctIndex: 2,
  },
  {
    question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç?",
    options: [
      "–ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø–∞—Ä–æ–ª–∏",
      "–•—Ä–∞–Ω–∏—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã",
      "–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–¥ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞",
      "–ó–∞–º–µ–Ω—è–µ—Ç –æ–±—ã—á–Ω—ã–π –∫–æ—à–µ–ª—ë–∫"
    ],
    correctIndex: 2,
  },
  {
    question: "–ö—Ç–æ —Å–æ–∑–¥–∞–ª Ethereum?",
    options: [
      "–ò–ª–æ–Ω –ú–∞—Å–∫",
      "–ß–∞—Ä–ª–∏ –õ–∏",
      "–í–∏—Ç–∞–ª–∏–∫ –ë—É—Ç–µ—Ä–∏–Ω",
      "–°–∞—Ç–æ—à–∏ –ù–∞–∫–∞–º–æ—Ç–æ"
    ],
    correctIndex: 2,
  },
  {
    question: "–î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç ERC-721?",
    options: [
      "–î–ª—è –≤—ã–ø—É—Å–∫–∞ stablecoin",
      "–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–æ–≤",
      "–î–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ (NFT)",
      "–î–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –º–µ–∂–¥—É –±–∞–Ω–∫–∞–º–∏"
    ],
    correctIndex: 2,
  },
  {
    question: "–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏?",
    options: [
      "–î–∞, –µ—Å–ª–∏ –∑–∞–ø–ª–∞—Ç–∏—Ç—å –∫–æ–º–∏—Å—Å–∏—é",
      "–î–∞, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á",
      "–ù–µ—Ç, –∫–æ–¥ –Ω–∞–≤—Å–µ–≥–¥–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ",
      "–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ MetaMask"
    ],
    correctIndex: 2,
  }
];

const FinalTestEthereum = () => {
  const [step, setStep] = useState(0);
  const [selected, setSelected] = useState(null);
  const [showResult, setShowResult] = useState(false);
  const [score, setScore] = useState(0);
  const current = questions[step];

  const handleAnswer = (index) => {
    setSelected(index);
    if (index === current.correctIndex) {
      setScore((prev) => prev + 1);
    }
  };

  const handleNext = () => {
    if (step + 1 < questions.length) {
      setStep((prev) => prev + 1);
      setSelected(null);
    } else {
      setShowResult(true);
    }
  };

  return (
    <LessonWrapper>
      {!showResult ? (
        <>
                  <div style={{ display: "flex", justifyContent: "space-between", marginBottom: "20px" }}>
                    <Link to="/modules/ethereum" className="nav-button">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è</Link>
                    <Link to="/" className="nav-button">üè†</Link>
                  </div>
          <h2 className="highlight">–í–æ–ø—Ä–æ—Å {step + 1} –∏–∑ {questions.length}</h2>
          <p style={{ fontWeight: 'bold' }}>{current.question}</p>

          <div className="options-list">
            {current.options.map((option, i) => (
              <button
                key={i}
                onClick={() => handleAnswer(i)}
                className={
                  selected === null
                    ? "option-button"
                    : i === current.correctIndex
                    ? "option-button correct"
                    : i === selected
                    ? "option-button incorrect"
                    : "option-button disabled"
                }
                disabled={selected !== null}
              >
                {option}
              </button>
            ))}
          </div>

          {selected !== null && (
            <div style={{ marginTop: "30px", textAlign: "center" }}>
              <button className="nav-button" onClick={handleNext}>
                {step + 1 === questions.length ? "–ó–∞–≤–µ—Ä—à–∏—Ç—å" : "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"}
              </button>
            </div>
          )}
        </>
      ) : (
        <>
          <h2 className="highlight">–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!</h2>
          <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: <b>{score}</b> –∏–∑ <b>{questions.length}</b></p>
          <div style={{ marginTop: "40px", textAlign: "center" }}>
            <Link to="/modules/ethereum" className="nav-button">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–æ–¥—É–ª—é</Link>
          </div>
        </>
      )}
    </LessonWrapper>
  );
};

export default FinalTestEthereum;
